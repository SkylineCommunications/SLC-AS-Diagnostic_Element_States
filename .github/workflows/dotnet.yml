# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore
    - name: Test
      run: dotnet test --no-build --verbosity normal
    - name: Install Connector Validator
      run: dotnet tool install -g Skyline.DataMiner.CICD.Tools.Validator
    
    - name: Run Connector Validator
      run: dataminer-validator validate-protocol-solution --solution-path "${{ github.workspace }}" --output-directory "${{ github.workspace }}" --output-file-name "validateResults" 
    
    - name: Archive Results
      if: success()
      uses: actions/upload-artifact@v4
      with:
        name: validateResults
        path: ${{ github.workspace }}/validateResults.json
    
    - name: Quality Gate
      run: |
        json=$(cat "${{ github.workspace }}/validateResults.json")
        critical=$(echo "$json" | jq -r '.CriticalIssueCount')
        major=$(echo "$json" | jq -r '.MajorIssueCount')
    
        if [ "$critical" != "0" ] || [ "$major" != "0" ]; then
          echo "Error: CriticalIssueCount or MajorIssueCount is not 0"
          exit 1
        fi
